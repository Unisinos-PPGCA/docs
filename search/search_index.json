{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs . yml # The configuration file . docs / index . md # The documentation homepage . ... # Other markdown pages , images and other files .","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs . yml # The configuration file . docs / index . md # The documentation homepage . ... # Other markdown pages , images and other files .","title":"Project layout"},{"location":"cluster_access/","text":"Acesso cluster unisinos Para acessar a interface gr\u00e1fica do miniPC Fazer um t\u00fanel para o front-end do cluster: ssh -p 8282 soft5g@ppgca.unisinos.br -L 3390 :10.0.200.10:3389 Usar um cliente RDP (Remmina, Cord, etc.) e configurar Server: localhost:3390 Para configurar o servi\u00e7o Web do free5GC (no miniPC) via browser: localhost:3000 via browser: localhost:7100 user: qualquer coisa pass: qualquercoisa@qualquer.coisa Precisa estar rodando o script start_stf.sh T\u00fanel ssh user @ppgca.unisinos.br -L porta_local : nome_nodo : porta_webservice user : usu\u00e1rio para acessar o front-end do cluster (n\u00e3o o mini_pc) porta_local : porta do teu PC que tu queres redirecionar para o t\u00fanel nome_nodo : nome ou endere\u00e7o IP que demos para o mini PC porta_webservice : \u00e9 a porta que est\u00e1 executando o Web Service no mini PC","title":"Cluster Access"},{"location":"cluster_access/#acesso-cluster-unisinos","text":"","title":"Acesso cluster unisinos"},{"location":"cluster_access/#para-acessar-a-interface-grafica-do-minipc","text":"Fazer um t\u00fanel para o front-end do cluster: ssh -p 8282 soft5g@ppgca.unisinos.br -L 3390 :10.0.200.10:3389 Usar um cliente RDP (Remmina, Cord, etc.) e configurar Server: localhost:3390","title":"Para acessar a interface gr\u00e1fica do miniPC"},{"location":"cluster_access/#para-configurar-o-servico-web-do-free5gc-no-minipc","text":"via browser: localhost:3000 via browser: localhost:7100 user: qualquer coisa pass: qualquercoisa@qualquer.coisa Precisa estar rodando o script start_stf.sh","title":"Para configurar o servi\u00e7o Web do free5GC (no miniPC)"},{"location":"cluster_access/#tunel","text":"ssh user @ppgca.unisinos.br -L porta_local : nome_nodo : porta_webservice user : usu\u00e1rio para acessar o front-end do cluster (n\u00e3o o mini_pc) porta_local : porta do teu PC que tu queres redirecionar para o t\u00fanel nome_nodo : nome ou endere\u00e7o IP que demos para o mini PC porta_webservice : \u00e9 a porta que est\u00e1 executando o Web Service no mini PC","title":"T\u00fanel"},{"location":"kubernetes/","text":"K8S Set Up Install the required packages in all the nodes #Setup # 1. 3 VMs Ubuntu 16.04.5 or 18.04.1.0, 1 master, 2 nodes. # 2. Static IPs on individual VMs # 3. /etc/hosts hosts file includes name to IP mappings for VMs # 4. Swap is disabled # 5. Take snapshots prior to installations, this way you can install # and revert to snapshot if needed #Disable swap, swapoff then edit your fstab removing any entry for swap partitions #You can recover the space with fdisk. You may want to reboot to ensure your config is ok. swapoff -a vi /etc/fstab #Add Google s apt repository gpg key curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - #Add the Kubernetes apt repository sudo bash -c cat EOF /etc/apt/sources.list.d/kubernetes.list deb https://apt.kubernetes.io/ kubernetes-xenial main EOF #Update the package list and use apt-cache to inspect versions available in the repository sudo apt-get update sudo apt-get install -y docker.io kubelet kubeadm kubectl sudo apt-mark hold docker.io kubelet kubeadm kubectl #Ensure both are set to start when the system starts up. sudo systemctl enable kubelet.service sudo systemctl enable docker.service # Setup Docker daemon. This a change that has been added since the recording of the course. sudo bash -c cat /etc/docker/daemon.json EOF { exec-opts : [ native.cgroupdriver=systemd ], log-driver : json-file , log-opts : { max-size : 100m }, storage-driver : overlay2 } EOF #Restart reload the systemd config and docker sudo systemctl daemon-reload sudo systemctl restart docker Create the Master #Only on the master, download the yaml files for the pod network. #The calico yaml file has changed since the publication of the course and is now avaialble at the URL below. wget https://docs.projectcalico.org/manifests/calico.yaml #Look inside calico.yaml and find the network range CALICO_IPV4POOL_CIDR, adjust if needed. vi calico.yaml #Create our kubernetes cluster, specifying a pod network range matching that in calico.yaml! sudo kubeadm init --pod-network-cidr = 192 .168.0.0/16 #Configure our account on the master to have admin access to the API server from a non-privileged account. mkdir -p $HOME /.kube sudo cp -i /etc/kubernetes/admin.conf $HOME /.kube/config sudo chown $( id -u ) : $( id -g ) $HOME /.kube/config #Deploy yaml file for your pod network. #This line of code has be updated since the publication of the course. kubectl apply -f calico.yaml Join the Nodes #Disable swap, swapoff then edit your fstab removing any entry for swap partitions #You can recover the space with fdisk. You may want to reboot to ensure your config is ok. swapoff -a vi /etc/fstab #Add the Google s apt repository gpg key curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - #Add the kuberentes apt repository sudo bash -c cat EOF /etc/apt/sources.list.d/kubernetes.list deb https://apt.kubernetes.io/ kubernetes-xenial main EOF #Update the package list sudo apt-get update #Install the required packages, if needed we can request a specific version sudo apt-get install -y docker.io kubelet kubeadm kubectl sudo apt-mark hold docker.io kubelet kubeadm kubectl #Ensure both are set to start when the system starts up. sudo systemctl enable kubelet.service sudo systemctl enable docker.service #Setup Docker daemon. This is a change that has been added since the recording of the course. sudo bash -c cat /etc/docker/daemon.json EOF { exec-opts : [ native.cgroupdriver=systemd ], log-driver : json-file , log-opts : { max-size : 100m }, storage-driver : overlay2 } EOF sudo systemctl daemon-reload sudo systemctl restart docker #If you didn t keep the output, on the master, you can get the token. kubeadm token list #If you need to generate a new token, perhaps the old one timed out/expired. kubeadm token create #On the master, you can find the ca cert hash. openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2 /dev/null | openssl dgst -sha256 -hex | sed s/^.* // #Using the master (API Server) IP address or name, the token and the cert has, let s join this Node to our cluster. sudo kubeadm join 172 .16.94.10:6443 \\ --token 9woi9e.gmuuxnbzd8anltdg \\ --discovery-token-ca-cert-hash sha256:f9cb1e56fecaf9989b5e882f54bb4a27d56e1e92ef9d56ef19a6634b507d76a9 #Back on master, this will say NotReady until the networking pod is created on the new node. Has to schedule the pod, then pull the container. kubectl get nodes","title":"K8S Set Up"},{"location":"kubernetes/#k8s-set-up","text":"","title":"K8S Set Up"},{"location":"kubernetes/#install-the-required-packages-in-all-the-nodes","text":"#Setup # 1. 3 VMs Ubuntu 16.04.5 or 18.04.1.0, 1 master, 2 nodes. # 2. Static IPs on individual VMs # 3. /etc/hosts hosts file includes name to IP mappings for VMs # 4. Swap is disabled # 5. Take snapshots prior to installations, this way you can install # and revert to snapshot if needed #Disable swap, swapoff then edit your fstab removing any entry for swap partitions #You can recover the space with fdisk. You may want to reboot to ensure your config is ok. swapoff -a vi /etc/fstab #Add Google s apt repository gpg key curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - #Add the Kubernetes apt repository sudo bash -c cat EOF /etc/apt/sources.list.d/kubernetes.list deb https://apt.kubernetes.io/ kubernetes-xenial main EOF #Update the package list and use apt-cache to inspect versions available in the repository sudo apt-get update sudo apt-get install -y docker.io kubelet kubeadm kubectl sudo apt-mark hold docker.io kubelet kubeadm kubectl #Ensure both are set to start when the system starts up. sudo systemctl enable kubelet.service sudo systemctl enable docker.service # Setup Docker daemon. This a change that has been added since the recording of the course. sudo bash -c cat /etc/docker/daemon.json EOF { exec-opts : [ native.cgroupdriver=systemd ], log-driver : json-file , log-opts : { max-size : 100m }, storage-driver : overlay2 } EOF #Restart reload the systemd config and docker sudo systemctl daemon-reload sudo systemctl restart docker","title":"Install the required packages in all the nodes"},{"location":"kubernetes/#create-the-master","text":"#Only on the master, download the yaml files for the pod network. #The calico yaml file has changed since the publication of the course and is now avaialble at the URL below. wget https://docs.projectcalico.org/manifests/calico.yaml #Look inside calico.yaml and find the network range CALICO_IPV4POOL_CIDR, adjust if needed. vi calico.yaml #Create our kubernetes cluster, specifying a pod network range matching that in calico.yaml! sudo kubeadm init --pod-network-cidr = 192 .168.0.0/16 #Configure our account on the master to have admin access to the API server from a non-privileged account. mkdir -p $HOME /.kube sudo cp -i /etc/kubernetes/admin.conf $HOME /.kube/config sudo chown $( id -u ) : $( id -g ) $HOME /.kube/config #Deploy yaml file for your pod network. #This line of code has be updated since the publication of the course. kubectl apply -f calico.yaml","title":"Create the Master"},{"location":"kubernetes/#join-the-nodes","text":"#Disable swap, swapoff then edit your fstab removing any entry for swap partitions #You can recover the space with fdisk. You may want to reboot to ensure your config is ok. swapoff -a vi /etc/fstab #Add the Google s apt repository gpg key curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - #Add the kuberentes apt repository sudo bash -c cat EOF /etc/apt/sources.list.d/kubernetes.list deb https://apt.kubernetes.io/ kubernetes-xenial main EOF #Update the package list sudo apt-get update #Install the required packages, if needed we can request a specific version sudo apt-get install -y docker.io kubelet kubeadm kubectl sudo apt-mark hold docker.io kubelet kubeadm kubectl #Ensure both are set to start when the system starts up. sudo systemctl enable kubelet.service sudo systemctl enable docker.service #Setup Docker daemon. This is a change that has been added since the recording of the course. sudo bash -c cat /etc/docker/daemon.json EOF { exec-opts : [ native.cgroupdriver=systemd ], log-driver : json-file , log-opts : { max-size : 100m }, storage-driver : overlay2 } EOF sudo systemctl daemon-reload sudo systemctl restart docker #If you didn t keep the output, on the master, you can get the token. kubeadm token list #If you need to generate a new token, perhaps the old one timed out/expired. kubeadm token create #On the master, you can find the ca cert hash. openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2 /dev/null | openssl dgst -sha256 -hex | sed s/^.* // #Using the master (API Server) IP address or name, the token and the cert has, let s join this Node to our cluster. sudo kubeadm join 172 .16.94.10:6443 \\ --token 9woi9e.gmuuxnbzd8anltdg \\ --discovery-token-ca-cert-hash sha256:f9cb1e56fecaf9989b5e882f54bb4a27d56e1e92ef9d56ef19a6634b507d76a9 #Back on master, this will say NotReady until the networking pod is created on the new node. Has to schedule the pod, then pull the container. kubectl get nodes","title":"Join the Nodes"},{"location":"learning/","text":"Kubernetes (K8S) Network A Guide to the Kubernetes Networking Model Operators Pattern Writing Kubernetes Operator using Operator SDK Docker Swarm Documentation","title":"Learning"},{"location":"learning/#kubernetes-k8s","text":"","title":"Kubernetes (K8S)"},{"location":"learning/#network","text":"A Guide to the Kubernetes Networking Model","title":"Network"},{"location":"learning/#operators-pattern","text":"Writing Kubernetes Operator using Operator SDK","title":"Operators Pattern"},{"location":"learning/#docker-swarm","text":"Documentation","title":"Docker Swarm"},{"location":"minikube_setup/","text":"Minikube Setup In order to setup minikube in our \"edge\" cluster an ansible script was created. To execute it follow the steps below: Edit the hosts and main.yaml files replacing the fields between . You can find the information in the private evernote file. If you have no access request to Cristiano. Execute the command ansible-playbook -i hosts main.yaml","title":"Minikube Setup"},{"location":"minikube_setup/#minikube-setup","text":"In order to setup minikube in our \"edge\" cluster an ansible script was created. To execute it follow the steps below: Edit the hosts and main.yaml files replacing the fields between . You can find the information in the private evernote file. If you have no access request to Cristiano. Execute the command ansible-playbook -i hosts main.yaml","title":"Minikube Setup"},{"location":"troubleshooting/","text":"Docker Layers folder consuming too much disk space If you see there is few disk space available may the root cause is that the docker layers folder is consuming two much space as described here . To understand if that is really the problem you can use the command du -h --max-depth=1. which shows how much disk space each folder is consuming. If that is the problem you may have to run command docker system prune -a that will prune and remove left overs. DNS not resolving If you are facing DNS issues try to follow the suggestion here .","title":"Troubleshooting"},{"location":"troubleshooting/#docker","text":"","title":"Docker"},{"location":"troubleshooting/#layers-folder-consuming-too-much-disk-space","text":"If you see there is few disk space available may the root cause is that the docker layers folder is consuming two much space as described here . To understand if that is really the problem you can use the command du -h --max-depth=1. which shows how much disk space each folder is consuming. If that is the problem you may have to run command docker system prune -a that will prune and remove left overs.","title":"Layers folder consuming too much disk space"},{"location":"troubleshooting/#dns-not-resolving","text":"If you are facing DNS issues try to follow the suggestion here .","title":"DNS not resolving"}]}